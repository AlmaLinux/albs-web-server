"""Added permissions

Revision ID: fad009ddf89a
Revises: cb0a65b84b4c
Create Date: 2022-06-30 14:56:29.374149

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fad009ddf89a'
down_revision = '469f4e07ae80'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user_actions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('description', sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'user_roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'action_role_mapping',
        sa.Column('action_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['action_id'], ['user_actions.id'], ),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
        sa.PrimaryKeyConstraint('action_id', 'role_id')
    )
    op.create_table(
        'teams',
        sa.Column('permissions', sa.Integer(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='teams_owner_id_fkey'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'user_role_mapping',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table(
        'products',
        sa.Column('permissions', sa.Integer(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('team_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='products_owner_id_fkey'),
        sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='products_team_id_fkey'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'team_role_mapping',
        sa.Column('team_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
        sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
        sa.PrimaryKeyConstraint('team_id', 'role_id')
    )

    op.create_table(
        'team_user_mapping',
        sa.Column('team_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('team_id', 'user_id')
    )

    op.create_table(
        'product_role_mapping',
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
        sa.PrimaryKeyConstraint('product_id', 'role_id')
    )

    op.create_table(
        'sign_key_role_mapping',
        sa.Column('sign_key_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
        sa.ForeignKeyConstraint(['sign_key_id'], ['sign_keys.id'], ),
        sa.PrimaryKeyConstraint('sign_key_id', 'role_id')
    )

    op.execute(sa.text("UPDATE teams SET permissions = 764"))
    op.alter_column('teams', 'permissions', nullable=False)

    op.execute(sa.text("UPDATE products SET permissions = 764"))
    op.alter_column('products', 'permissions', nullable=False)

    op.alter_column('builds', 'user_id', new_column_name='owner_id', existing_type=sa.Integer)
    op.alter_column('build_releases', 'created_by_id', new_column_name='owner_id', existing_type=sa.Integer)

    op.add_column('build_releases', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE build_releases SET permissions = 764"))
    op.alter_column('build_releases', 'permissions', nullable=False)
    op.drop_constraint('build_releases_created_by_id_fkey', 'build_releases', type_='foreignkey')
    op.create_foreign_key('build_releases_owner_id_fkey', 'build_releases', 'users', ['owner_id'], ['id'])

    op.add_column('builds', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE builds SET permissions = 764"))
    op.alter_column('builds', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('builds', sa.Column('team_id', sa.Integer(), nullable=True))
    op.drop_constraint('builds_user_id_fkey', 'builds', type_='foreignkey')
    op.create_foreign_key('builds_owner_id_fkey', 'builds', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('builds_team_id_fkey', 'builds', 'teams', ['team_id'], ['id'])

    op.add_column('distributions', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE distributions SET permissions = 764"))
    op.alter_column('distributions', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('distributions', sa.Column('owner_id', sa.Integer(), nullable=True))
    # FIXME: Change nullable to False after owner population
    op.add_column('distributions', sa.Column('team_id', sa.Integer(), nullable=True))
    op.create_foreign_key('distributions_team_id_fkey', 'distributions', 'teams', ['team_id'], ['id'])
    op.create_foreign_key('distributions_owner_id_fkey', 'distributions', 'users', ['owner_id'], ['id'])

    op.add_column('platform_flavours', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE platform_flavours SET permissions = 764"))
    op.alter_column('platform_flavours', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('platform_flavours', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_foreign_key('platform_flavours_owner_id_fkey', 'platform_flavours', 'users', ['owner_id'], ['id'])

    op.add_column('platforms', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE platforms SET permissions = 764"))
    op.alter_column('platforms', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('platforms', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_foreign_key('platforms_owner_id_fkey', 'platforms', 'users', ['owner_id'], ['id'])

    op.add_column('repositories', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE repositories SET permissions = 764"))
    op.alter_column('repositories', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('repositories', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_foreign_key('repositories_owner_id_fkey', 'repositories', 'users', ['owner_id'], ['id'])

    op.add_column('sign_keys', sa.Column('permissions', sa.Integer(), nullable=True))
    op.execute(sa.text("UPDATE sign_keys SET permissions = 764"))
    op.alter_column('sign_keys', 'permissions', nullable=False)
    # FIXME: Change nullable to False after owner population
    op.add_column('sign_keys', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_foreign_key('sign_keys_owner_id_fkey', 'sign_keys', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('sign_keys_owner_id_fkey', 'sign_keys', type_='foreignkey')
    op.drop_column('sign_keys', 'owner_id')
    op.drop_column('sign_keys', 'permissions')

    op.drop_constraint('repositories_owner_id_fkey', 'repositories', type_='foreignkey')
    op.drop_column('repositories', 'owner_id')
    op.drop_column('repositories', 'permissions')

    op.drop_constraint('platforms_owner_id_fkey', 'platforms', type_='foreignkey')
    op.drop_column('platforms', 'owner_id')
    op.drop_column('platforms', 'permissions')

    op.drop_constraint('platform_flavours_owner_id_fkey', 'platform_flavours', type_='foreignkey')
    op.drop_column('platform_flavours', 'owner_id')
    op.drop_column('platform_flavours', 'permissions')

    op.drop_constraint('distributions_owner_id_fkey', 'distributions', type_='foreignkey')
    op.drop_constraint('distributions_team_id_fkey', 'distributions', type_='foreignkey')
    op.drop_column('distributions', 'team_id')
    op.drop_column('distributions', 'owner_id')
    op.drop_column('distributions', 'permissions')

    op.drop_constraint('builds_team_id_fkey', 'builds', type_='foreignkey')
    op.drop_constraint('builds_owner_id_fkey', 'builds', type_='foreignkey')
    op.alter_column('builds', 'owner_id', new_column_name='user_id')
    op.create_foreign_key('builds_user_id_fkey', 'builds', 'users', ['user_id'], ['id'])
    op.drop_column('builds', 'team_id')
    op.drop_column('builds', 'permissions')

    op.drop_constraint('build_releases_owner_id_fkey', 'build_releases', type_='foreignkey')
    op.alter_column('build_releases', 'owner_id', new_column_name='created_by_id')
    op.create_foreign_key('build_releases_created_by_id_fkey', 'build_releases', 'users', ['created_by_id'], ['id'])
    op.drop_column('build_releases', 'permissions')

    op.drop_table('sign_key_role_mapping')
    op.drop_table('product_role_mapping')
    op.drop_table('team_user_mapping')
    op.drop_table('team_role_mapping')
    op.drop_table('products')
    op.drop_table('user_role_mapping')
    op.drop_table('teams')
    op.drop_table('action_role_mapping')
    op.drop_table('user_roles')
    op.drop_table('user_actions')
    # ### end Alembic commands ###
