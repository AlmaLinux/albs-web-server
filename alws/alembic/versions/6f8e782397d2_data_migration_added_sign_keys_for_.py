"""Data migration added sign keys for build task artifacts

Revision ID: 6f8e782397d2
Revises: 936845bf5a4f
Create Date: 2022-02-01 09:33:57.412685

"""
from alembic import op
from sqlalchemy.orm import sessionmaker, selectinload
from sqlalchemy import update, and_
from sqlalchemy.future import select

from alws import models


# revision identifiers, used by Alembic.
revision = '6f8e782397d2'
down_revision = '2af59b3b1a4d'
branch_labels = None
depends_on = None


def upgrade():
    return
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    Session = sessionmaker(
        bind=connection.engine
    )
    db = Session(bind=connection)
    sign_tasks_q = select(models.SignTask).where(
        models.SignTask.error_message.is_(None),
        models.SignTask.status == 3).options(
            selectinload(models.SignTask.sign_key),
            selectinload(models.SignTask.build))

    modified = {}
    sign_tasks_result = db.execute(sign_tasks_q)
    sign_tasks = sign_tasks_result.scalars().all()
    for sign_task in sign_tasks:
        sign_key_id = sign_task.sign_key.id
        modified.setdefault(sign_key_id, [])
        build_task_q = select(
            models.BuildTaskArtifact.id
        ).join(
            models.BuildTask,
            models.BuildTask.id == models.BuildTaskArtifact.build_task_id
        ).filter(and_(
            models.BuildTask.build_id == sign_task.build.id,
            models.BuildTaskArtifact.type == 'rpm',
            models.BuildTaskArtifact.sign_key == None
        ))
        res = db.execute(build_task_q)
        for artifact_id in res:
            modified[sign_key_id].append(artifact_id[0])
    for sk, baids in modified.items():
        sign_key = db.execute(select(models.SignKey).where(
            models.SignKey.id == sk)).scalars().first()
        db.execute(
            update(models.BuildTaskArtifact).where(
                models.BuildTaskArtifact.id.in_(baids)).values(
                    sign_key_id=sign_key.id
            )
        )
    db.commit()
    # ### end Alembic commands ###


def downgrade():
    # FIXME
    pass
