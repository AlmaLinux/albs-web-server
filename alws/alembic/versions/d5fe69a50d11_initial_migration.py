"""Initial migration

Revision ID: d5fe69a50d11
Revises: 
Create Date: 2021-09-29 15:46:03.342031

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d5fe69a50d11"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "build_task_refs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.TEXT(), nullable=False),
        sa.Column("git_ref", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "platforms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.Text(), nullable=False),
        sa.Column("distr_type", sa.Text(), nullable=False),
        sa.Column("distr_version", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("arch_list", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_platforms_name"), "platforms", ["name"], unique=True)
    op.create_table(
        "repositories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("arch", sa.Text(), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("type", sa.Text(), nullable=False),
        sa.Column("debug", sa.Boolean(), nullable=True),
        sa.Column("pulp_href", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.TEXT(), nullable=False),
        sa.Column("email", sa.TEXT(), nullable=False),
        sa.Column("jwt_token", sa.TEXT(), nullable=True),
        sa.Column("github_token", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "builds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "platform_repository",
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["platform_id"], ["platforms.id"],),
        sa.ForeignKeyConstraint(["repository_id"], ["repositories.id"],),
        sa.PrimaryKeyConstraint("platform_id", "repository_id"),
    )
    op.create_table(
        "build_dependency",
        sa.Column("build_id", sa.Integer(), nullable=False),
        sa.Column("build_dependency", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["build_dependency"], ["builds.id"],),
        sa.ForeignKeyConstraint(["build_id"], ["builds.id"],),
        sa.PrimaryKeyConstraint("build_id", "build_dependency"),
    )
    op.create_table(
        "build_repo",
        sa.Column("build_id", sa.Integer(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["build_id"], ["builds.id"],),
        sa.ForeignKeyConstraint(["repository_id"], ["repositories.id"],),
        sa.PrimaryKeyConstraint("build_id", "repository_id"),
    )
    op.create_table(
        "build_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ts", sa.DateTime(), nullable=True),
        sa.Column("build_id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("ref_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("arch", sa.VARCHAR(length=50), nullable=False),
        sa.ForeignKeyConstraint(["build_id"], ["builds.id"],),
        sa.ForeignKeyConstraint(["platform_id"], ["platforms.id"],),
        sa.ForeignKeyConstraint(["ref_id"], ["build_task_refs.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "build_artifacts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("build_task_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("type", sa.Text(), nullable=False),
        sa.Column("href", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["build_task_id"], ["build_tasks.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "build_task_dependency",
        sa.Column("build_task_id", sa.Integer(), nullable=False),
        sa.Column("build_task_dependency", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["build_task_dependency"], ["build_tasks.id"],),
        sa.ForeignKeyConstraint(["build_task_id"], ["build_tasks.id"],),
        sa.PrimaryKeyConstraint("build_task_id", "build_task_dependency"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("build_task_dependency")
    op.drop_table("build_artifacts")
    op.drop_table("build_tasks")
    op.drop_table("build_repo")
    op.drop_table("build_dependency")
    op.drop_table("platform_repository")
    op.drop_table("builds")
    op.drop_table("users")
    op.drop_table("repositories")
    op.drop_index(op.f("ix_platforms_name"), table_name="platforms")
    op.drop_table("platforms")
    op.drop_table("build_task_refs")
    # ### end Alembic commands ###
