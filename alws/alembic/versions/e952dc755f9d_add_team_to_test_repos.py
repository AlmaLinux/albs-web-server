"""Add Team to Test repos

Revision ID: e952dc755f9d
Revises: 07dad1dc5105
Create Date: 2024-05-24 15:58:53.153438

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e952dc755f9d'
down_revision = '07dad1dc5105'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_repository_role_mapping',
        sa.Column('test_repository_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], name='fk_test_repositories_role_mapping_role_id', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['test_repository_id'], ['test_repositories.id'], name='fk_test_repositories_role_mapping_product_id', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('test_repository_id', 'role_id')
    )
    op.alter_column('build_releases', 'status',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.execute(sa.text("UPDATE build_tasks SET mock_options = '{\"definitions\": {}}' WHERE mock_options IS NULL"))
    op.alter_column('build_tasks', 'mock_options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.execute(sa.text("UPDATE builds SET mock_options = '{}' WHERE mock_options IS NULL"))
    op.alter_column('builds', 'mock_options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('builds', 'released',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.execute(sa.text("UPDATE builds SET cancel_testing = FALSE WHERE cancel_testing IS NULL"))
    op.alter_column('builds', 'cancel_testing',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('gen_key_tasks', 'status',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('new_errata_packages', 'errata_record_id',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('new_errata_packages', 'platform_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('new_errata_references', 'errata_record_id',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('new_errata_references', 'platform_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('platforms', 'module_build_index',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('repositories', 'debug',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('sign_keys', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('sign_keys', 'keyid',
               existing_type=sa.VARCHAR(length=16),
               nullable=False)
    op.alter_column('sign_keys', 'fingerprint',
               existing_type=sa.VARCHAR(length=40),
               nullable=False)
    op.alter_column('sign_keys', 'public_url',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('sign_keys', 'inserted',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('sign_tasks', 'status',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('test_repositories', sa.Column('permissions', sa.Integer(), server_default=str(764), nullable=False))
    op.add_column('test_repositories', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.add_column('test_repositories', sa.Column('team_id', sa.Integer(), nullable=True))
    op.create_foreign_key('test_repositories_owner_id_fkey', 'test_repositories', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('test_repositories_team_id_fkey', 'test_repositories', 'teams', ['team_id'], ['id'])
    op.alter_column('user_actions', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('user_roles', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_roles', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user_actions', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_constraint('test_repositories_team_id_fkey', 'test_repositories', type_='foreignkey')
    op.drop_constraint('test_repositories_owner_id_fkey', 'test_repositories', type_='foreignkey')
    op.drop_column('test_repositories', 'team_id')
    op.drop_column('test_repositories', 'owner_id')
    op.drop_column('test_repositories', 'permissions')
    op.alter_column('sign_tasks', 'status',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('sign_keys', 'inserted',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('sign_keys', 'public_url',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('sign_keys', 'fingerprint',
               existing_type=sa.VARCHAR(length=40),
               nullable=True)
    op.alter_column('sign_keys', 'keyid',
               existing_type=sa.VARCHAR(length=16),
               nullable=True)
    op.alter_column('sign_keys', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('repositories', 'debug',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('platforms', 'module_build_index',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('new_errata_references', 'platform_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('new_errata_references', 'errata_record_id',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('new_errata_packages', 'platform_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('new_errata_packages', 'errata_record_id',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('gen_key_tasks', 'status',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('builds', 'cancel_testing',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('builds', 'released',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('builds', 'mock_options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('build_tasks', 'mock_options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('build_releases', 'status',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_table('test_repository_role_mapping')
    # ### end Alembic commands ###
