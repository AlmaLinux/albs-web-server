name: pytest
on:
  pull_request_target:
    branches:
      - "**"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        name: Check out repository
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Create dirs
        run: |
          mkdir -p /home/runner/work/albs-web-server/alts
          mkdir -p /home/runner/work/albs-web-server/albs-frontend
          mkdir -p /home/runner/work/albs-web-server/albs-node
          mkdir -p /home/runner/work/albs-web-server/albs-sign-file
          mkdir -p /home/runner/work/albs-web-server/albs-sign-node
      - name: Add env file
        run: |
          touch ./vars.env
          echo ALTS_TOKEN="secret" >> ./vars.env
          echo GITHUB_CLIENT="secret" >> ./vars.env
          echo GITHUB_CLIENT_SECRET="secret" >> ./vars.env
          echo POSTGRES_PASSWORD="password" >> ./vars.env
          echo JWT_SECRET="secret" >> ./vars.env
          echo POSTGRES_DB="test-almalinux-bs" >> ./vars.env
          echo PACKAGE_BEHOLDER_ENABLED="False" >> ./vars.env
          echo DATABASE_URL="postgresql+asyncpg://postgres:password@db/test-almalinux-bs" >> ./vars.env
          echo SYNC_DATABASE_URL="postgresql+psycopg2://postgres:password@db/test-almalinux-bs" >> ./vars.env
          echo PULP_DATABASE_URL="postgresql+psycopg2://postgres:password@db/test-almalinux-bs" >> ./vars.env
          cat alws/alembic.ini | sed 's/almalinux-bs/test-almalinux-bs/' | tee alws/alembic.ini
      - uses: isbang/compose-action@v1.5.1
        name: Run docker-compose
        with:
          # Use this if you change something in Dockerfile
          # up-flags: --build --no-deps
          up-flags: "--pull always --no-build --no-deps"
          down-flags: "--volumes"
          services: |
            db
            web_server
      - name: Run unit tests (pytest)
        run: docker-compose run -v /tmp:/tmp --no-deps web_server bash -o pipefail -c 'source
          env/bin/activate && pip3 install -r requirements.txt &&
          pytest -vv --ignore alws/ --cov-report term-missing:skip-covered
          --cov-report xml:/tmp/coverage.xml --junitxml=/tmp/pytest.xml --cov=alws
          tests/ | tee /tmp/pytest-coverage.txt'
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: /tmp/pytest-coverage.txt
          pytest-xml-coverage-path: /tmp/coverage.xml
          title: Coverage report for changed files
          badge-title: Total coverage
          hide-badge: false
          hide-report: false
          report-only-changed-files: true
          hide-comment: false
          remove-link-from-badge: false
          junitxml-path: /tmp/pytest.xml
