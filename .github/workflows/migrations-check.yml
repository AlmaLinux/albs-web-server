name: check-migrations
on:
  pull_request:
    branches:
      - "**"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        name: Check out repository
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Configure git and fetch origin/master
        run: |
          git config --global user.email "action@users.noreply.github.com"
          git config --global user.name "action"
          git fetch origin master
      - name: Rebase
        id: rebase
        run: |
          git rebase origin/master
        continue-on-error: true
      - name: Merge
        if: steps.rebase.outcome != 'success'
        run: |
          git rebase --abort
          git merge --no-ff --no-log origin/master
      - name: Create dirs
        run: |
          mkdir -p /home/runner/work/albs-web-server/alts
          mkdir -p /home/runner/work/albs-web-server/albs-frontend
          mkdir -p /home/runner/work/albs-web-server/albs-node
          mkdir -p /home/runner/work/albs-web-server/albs-sign-node
          mkdir -p /home/runner/work/albs-web-server/alma-tests-cacher
          touch /home/runner/work/albs-web-server/alma-tests-cacher/vars.env
      - name: Add env file
        run: |
          touch ./vars.env
          echo ALTS_TOKEN="secret" >> ./vars.env
          echo ALMALINUX_CLIENT="secret" >> ./vars.env
          echo ALMALINUX_CLIENT_SECRET="secret" >> ./vars.env
          echo GITHUB_CLIENT="secret" >> ./vars.env
          echo GITHUB_CLIENT_SECRET="secret" >> ./vars.env
          echo POSTGRES_PASSWORD="password" >> ./vars.env
          echo JWT_SECRET="secret" >> ./vars.env
          echo POSTGRES_DB="almalinux-bs" >> ./vars.env
          echo PACKAGE_BEHOLDER_ENABLED="False" >> ./vars.env
          echo DATABASE_URL="postgresql+asyncpg://postgres:password@db/almalinux-bs" >> ./vars.env
          echo SYNC_DATABASE_URL="postgresql+psycopg2://postgres:password@db/almalinux-bs" >> ./vars.env
          echo PULP_DATABASE_URL="postgresql+psycopg2://postgres:password@db/almalinux-bs" >> ./vars.env
      - uses: isbang/compose-action@v1.5.1
        name: Run docker-compose
        with:
          # Use this if you change something in Dockerfile
          # up-flags: --build --no-deps
          up-flags: "--pull always --no-build --no-deps"
          down-flags: "--volumes"
          services: |
            db
            web_server
      - name: Check migratrions
        run: docker-compose run --rm --no-deps web_server bash -c 'source
          env/bin/activate && pip3 install -r requirements.txt &&
          alembic --config alws/alembic.ini upgrade head'
